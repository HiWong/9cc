ABI (Application Binary Interface)

Function Stack Frame Layout
=============================

High  | ...           | (1st argument on stack)
      +---------------+ <--- 16(rbp)
      | return address|
      +---------------+ <--- 8(rbp)
      | saved rbp     |
      +---------------+ <--- rbp
      | reg save area |
      +---------------+ (optional, only for variable args)
      | local vars    |
      +---------------+
      | params        |
      +---------------+
      | call returns  |
      +---------------+
      | call params   | (for all func calls in this function)
Low   +---------------+ <--- rsp
      | red zone      |


Case 1: Fixed Arguments

High  | ...           | (1st argument on stack)
      +---------------+ <--- 16(rbp)
      | return address|
      +---------------+ <--- 8(rbp)
      | saved rbp     |
      +---------------+ <--- rbp
      | local vars    |
      +---------------+
      | params        | (params in registers)
      +---------------+
      | call returns  |
      +---------------+
      | call params   | (for all func calls in this function)
Low   +---------------+ <--- rsp
      | red zone      |


Case 2: Variable Arguments

High  | ...           | (1st argument on stack)
      +---------------+ <--- 16(rbp)
      | return address|
      +---------------+ <--- 8(rbp)
      | saved rbp     |
      +---------------+ <--- rbp
      | reg save area | (all params in registers)
      +---------------+
      | local vars    |
      +---------------+
      | call returns  |
      +---------------+
      | call params   | (for all func calls in this function)
Low   +---------------+ <--- rsp
      | red zone      |


Register Save Area:

High  | xmm7          |
      +---------------+ -16(rbp)
      | xmm6          |
      +---------------+ -32(rbp)
      | xmm5          |
      +---------------+ -48(rbp)
      | xmm4          |
      +---------------+ -64(rbp)
      | xmm3          |
      +---------------+ -80(rbp)
      | xmm2          |
      +---------------+ -96(rbp)
      | xmm1          |
      +---------------+ -112(rbp)
      | xmm0          |
      +---------------+ -128(rbp)
      | r9            |
      +---------------+ -136(rbp)
      | r8            |
      +---------------+ -144(rbp)
      | rcx           |
      +---------------+ -152(rbp)
      | rdx           |
      +---------------+ -160(rbp)
      | rsi           |
      +---------------+ -168(rbp)
      | rdi           |
Low   +---------------+ -176(rbp)


x86_64 Registers
==================

General Purpose Registers:

REG     ARG     RETURN          PRESERVED
-------------------------------------------------
rax             ret iarg 1
rbx                             callee preserved
rbp                             callee preserved
rsp                             callee preserved
rdi     iarg 1
rsi     iarg 2
rdx     iarg 3  ret iarg 2
rcx     iarg 4
r8      iarg 5
r9      iarg 6
r10
r11
r12                             callee preserved
r13                             callee preserved
r14                             callee preserved
r15                             callee preserved

XMM Registers:

REG     ARG     RETURN          PRESERVED
-------------------------------------------------
xmm0    farg 1  ret farg 1
xmm1    farg 2  ret farg 2
xmm2    farg 3
xmm3    farg 4
xmm4    farg 5
xmm5    farg 6
xmm6    farg 7
xmm7    farg 8
xmm8
xmm9
xmm10
xmm11
xmm12
xmm13
xmm14
xmm15

Reference
===========

- v0.99.6 (Oct 7, 2013): http://www.x86-64.org/documentation/abi.pdf
- v0.90 (Dec 2, 2003): http://people.freebsd.org/~obrien/amd64-elf-abi.pdf
